generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  ADMIN
  EMPLOYEE
  CHEF_SERVICE
}

enum MaritalStatus {
  SINGLE
  MARRIED
  DIVORCED
  WIDOWED
}

enum LeaveStatus {
  PENDING
  APPROVED
  REJECTED
  CANCELLED
}

enum LeaveTypeEnum {
  ANNUAL
  SICK
  MATERNITY
  PATERNITY
  UNPAID
  OTHER
}
enum ServiceEnum {
  EMERGENCY
  INTERNAL 
  CARDIOLOGY	
  PULMONOLOGY
  NEUROLOGY
  ONCOLOGY	
  ORTHOPEDICS
  PEDIATRICS
  GYNECOLOGY_AND_OBSTETRICS
  GASTROENTEROLOGY
  NEPHROLOGY
  DERMATOLOGY	
  PSYCHIATRY	
  INFECTIOUS_DISEASES 
  ANESTHESIOLOGY
  RADIOLOGY
  SURGERY
}

model User {
  id String @id @default(cuid())
  name String
  email String @unique
  password String
  phone String?
  role Role @default(EMPLOYEE)
  dateOfBirth String?
  nationality String?
  cinNumber Int?
  cnssNumber Int?
  maritalStatus MaritalStatus @default(SINGLE)
  jobTitle String?
  service ServiceEnum @default(EMERGENCY)
  children Child[]
  leaveRequests LeaveRequest[]
  leaveBalances  LeaveBalance[]
  schedules        Schedule[] 
  tasks            Task[] 
  resetToken       String?  @unique
  resetTokenExpiry DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Child {
  id          String   @id @default(uuid())
  name        String
  dateOfBirth String
  gender      Gender @default(MALE)
  userId      String
  parent      User     @relation(fields: [userId], references: [id])
  hasDisability Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model LeaveType {
  id            Int      @id @default(autoincrement())
  name          String
  description   String?
  type          LeaveTypeEnum @default(ANNUAL)
  leaves        LeaveRequest[]
  leaveBalances LeaveBalance[]
}



model LeaveRequest {
  id            String     @id @default(uuid())
  requestNumber Int       @unique @default(autoincrement())
  startDate     DateTime
  endDate       DateTime
  status        LeaveStatus @default(PENDING)
  reason        String?
  userId        String
  typeCongeId   Int
  comment       String?
  attachmentUrl String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  user          User       @relation(fields: [userId], references: [id])
  typeConge     LeaveType  @relation(fields: [typeCongeId], references: [id])
}

model LeaveBalance {
  id               String   @id @default(uuid())
  year             Int
  initialBalance   Float
  usedBalance      Float    @default(0)
  remainingBalance Float
  userId           String
  user             User     @relation(fields: [userId], references: [id])
  typeCongeId      Int
  typeConge        LeaveType @relation(fields: [typeCongeId], references: [id])
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  @@unique([userId, year, typeCongeId])
}

model Schedule {
  id          String    @id @default(uuid())
  date        DateTime
  startTime   DateTime
  endTime     DateTime
  service     ServiceEnum @default(EMERGENCY)
  userId      String
  user        User      @relation(fields: [userId], references: [id])
}


model Task {
  id            String    @id @default(uuid())
  title         String
  description   String?
  dueDate       DateTime?
  isCompleted   Boolean   @default(false)
  userId        String
  user          User      @relation(fields: [userId], references: [id])
}