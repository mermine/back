// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  ADMIN
  EMPOYEE
  MANAGER
}

enum MaritalStatus {
  SINGLE
  MARRIED
  DIVORCED
  WIDOWED
}


model User {
  id String @id @default(cuid())
  name String
  email String @unique
  password String
  phone String?
  role Role @default(EMPOYEE)
  dateOfBirth String?
  nationality String?
  cinNumber Int?
  cnssNumber Int?
  maritalStatus MaritalStatus @default(SINGLE)
  jobTitle String?
  service String?
  children Child[]
  demandesDeConge DemandeDeConge[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Child {
  id          String   @id @default(uuid())
  name        String
  dateOfBirth String
  gender      Gender @default(MALE)
  userId      String
  parent      User     @relation(fields: [userId], references: [id])
  hasDisability Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model TypeConge {
  id            String            @id @default(uuid())
  nom           String
  description   String?
  demandes      DemandeDeConge[]  // One-to-many relation to Demande
}

model DemandeDeConge {
  id            String     @id @default(uuid())
  dateDebut     DateTime
  dateFin       DateTime
  statut        String     // e.g., "en attente", "accepté", "rejeté"
  motif         String?
  userId        String
  typeCongeId   String

  user          User       @relation(fields: [userId], references: [id])
  typeConge     TypeConge  @relation(fields: [typeCongeId], references: [id])
}

