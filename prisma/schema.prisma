generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  ADMIN
  EMPOYEE
  MANAGER
}

enum MaritalStatus {
  SINGLE
  MARRIED
  DIVORCED
  WIDOWED
}

enum LeaveStatus {
  PENDING
  APPROVED
  REJECTED
  CANCELLED
}

enum LeaveTypeEnum {
  ANNUAL
  SICK
  MATERNITY
  PATERNITY
  UNPAID
  OTHER
}


model User {
  id String @id @default(cuid())
  name String
  email String @unique
  password String
  phone String?
  role Role @default(EMPOYEE)
  dateOfBirth String?
  nationality String?
  cinNumber Int?
  cnssNumber Int?
  maritalStatus MaritalStatus @default(SINGLE)
  jobTitle String?
  service String?
  children Child[]
  leaveRequests LeaveRequest[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // 
}


model Child {
  id          String   @id @default(uuid())
  name        String
  dateOfBirth String
  gender      Gender @default(MALE)
  userId      String
  parent      User     @relation(fields: [userId], references: [id])
  hasDisability Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model LeaveType {
  id            String            @id @default(uuid())
  name          String
  description   String?
  type          LeaveTypeEnum @default(ANNUAL)
  leaves        LeaveRequest[]
}



model LeaveRequest {
  id            String     @id @default(uuid())
  startDate     DateTime
  endDate       DateTime
  status        LeaveStatus @default(PENDING)
  reason        String?
  userId        String
  typeCongeId   String
  comment       String?
  attachmentUrl String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  user          User       @relation(fields: [userId], references: [id])
  typeConge     LeaveType  @relation(fields: [typeCongeId], references: [id])
}
